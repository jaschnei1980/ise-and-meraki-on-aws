AWSTemplateFormatVersion: 2010-09-09
Description: >-
   This template deploys a meraki vMX appliances in a VPC. (qs-1s3afc2ta)
Parameters:
  InstanceType:
    Description: Amazon EC2 instance type for the vMX instances. For the recomended and supported instance types please refer to the vMX deployment guide. 
    Type: String
    Default: c5.large
    AllowedValues:
      - c5.large
      - c5.xlarge
      - m4.large
    ConstraintDescription: must be a valid EC2 instance type.
  KeyPairName:
    Description: Name of an existing EC2 KeyPair, vMX instances will launch with this key pair
    Type: 'AWS::EC2::KeyPair::KeyName'
  SubnetID:
    Description: Subnet ID to be used for the deployment of vMX in an Availability Zone
    Type: 'AWS::EC2::Subnet::Id'
  vMX1Token:
    Description: Onboarding token to be used for the vMX1. This can be obtained from the Meraki dashboard. 
    Type: String
    Default: change_to_match_token_from_dashboard
  vMX2Token:
    Description: Onboarding token to be used for the vMX2. This can be obtained from the Meraki dashboard. 
    Type: String
    Default: change_to_match_token_from_dashboard
  vMX1MerakiNetworkTag:
    Description: Network tag used to identify vMX1 network for Meraki dashboard.
    Type: String
    Default: vMX
  vMX2MerakiNetworkTag:
    Description: Network tag used to identify vMX2 network for Meraki dashboard.
    Type: String
    Default: vMX
  VPCPrivateSubnet1ARouteTableID:
    Description: ID of the existing VPC private route table (e.g., `rt-0343606e`).
    Type: String
  VPCPrivateSubnet2ARouteTableID:
    Description: ID of the existing VPC private route table (e.g., `rt-0343606e`).
    Type: String
  VPCID:
    Description: ID of the existing VPC for deployment (e.g., `vpc-0343606e`).
    Type: AWS::EC2::VPC::Id
  VPCCIDR:
    AllowedPattern: '^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$'
    ConstraintDescription: CIDR block parameter must be in the form `x.x.x.x/16-28`.
    Default: 10.0.0.0/16
    Description: CIDR block for the VPC.
    Type: String
  Branch1CIDR:
    AllowedPattern: '^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$'
    ConstraintDescription: CIDR block parameter must be in the form "x.x.x.x/17-28".
    Default: 192.168.0.0/16
    Description: CIDR block for the Branch1.
    Type: String

Mappings:
  AWSVMXAMI:
    us-east-1:
      AMI: ami-033cdc7addc34de7b
    us-east-2:
      AMI: ami-0682f3ca733136feb
    us-west-1:
      AMI: ami-09db17cd0ae68ce37
    us-west-2:
      AMI: ami-094d363fc83c2d454
    ca-central-1:
      AMI: ami-03b6bff67c18fe1a7
    eu-central-1:
      AMI: ami-05c87da57bef918fe
    eu-west-1:
      AMI: ami-041a9105a7428881e
    eu-west-2:
      AMI: ami-07455b0098ec1a0af
    eu-west-3:
      AMI: ami-06d223edb947e06f8
    eu-north-1:
      AMI: ami-0c47910d707d3d8ff
    eu-south-1:
      AMI: ami-03dce7b6bb7e4632d
    ap-east-1:
      AMI: ami-07fe0d5e3622aaee0
    ap-southeast-1:
      AMI: ami-0649b3dd335cbd849
    ap-southeast-2:
      AMI: ami-0e866deec1c0966ce
    ap-northeast-2:
      AMI: ami-0eb9c16d27f4ffd0c
    ap-northeast-1:
      AMI: ami-08b3370eb3656af21
    ap-south-1:
      AMI: ami-00841fc124240e830
    sa-east-1:
      AMI: ami-06f0baada2ea0cf76
    me-south-1:
      AMI: ami-0bb55407d5a52914e
    af-south-1:
      AMI: ami-044eae2d8e3fb2188

Resources:
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: Security Group to Allow Internal VPC Traffic and from Branches
      GroupName: vMX-Security-Group
      SecurityGroupEgress: 
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
      SecurityGroupIngress: 
        - IpProtocol: -1
          CidrIp: !Ref 'VPCCIDR'
        - IpProtocol: -1
          CidrIp: !Ref 'Branch1CIDR'
      VpcId: !Ref 'VPCID'
  
  vMX1Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !FindInMap
        - AWSVMXAMI
        - !Ref 'AWS::Region'
        - AMI
      InstanceType: !Ref 'InstanceType'
      KeyName: !Ref 'KeyPairName'
      SourceDestCheck: false
      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          DeviceIndex: '0'
          SubnetId: !Ref 'SubnetID'
          GroupSet:
            - !GetAtt 'SecurityGroup.GroupId'
      UserData:
        Fn::Base64: !Ref 'vMX1Token'
      Tags:
        - Key: Name
          Value: 'vMX1'
        - Key: MerakiTag
          Value:
            Ref: vMX1MerakiNetworkTag
  vMX2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !FindInMap
        - AWSVMXAMI
        - !Ref 'AWS::Region'
        - AMI
      InstanceType: !Ref 'InstanceType'
      KeyName: !Ref 'KeyPairName'
      SourceDestCheck: false
      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          DeviceIndex: '0'
          SubnetId: !Ref 'SubnetID'
          GroupSet:
            - !GetAtt 'SecurityGroup.GroupId'
      UserData:
        Fn::Base64: !Ref 'vMX2Token'
      Tags:
        - Key: Name
          Value: 'vMX2'
        - Key: MerakiTag
          Value:
            Ref: vMX2MerakiNetworkTag            
  Branch1Private1Route:          
    Type: AWS::EC2::Route
    DependsOn: vMX1Instance
    Properties:
      DestinationCidrBlock: !Ref 'Branch1CIDR'
      InstanceId: !Ref 'vMX1Instance'
      RouteTableId: !Ref 'VPCPrivateSubnet1ARouteTableID'
  Branch1Private2Route:          
    Type: AWS::EC2::Route
    DependsOn: vMX2Instance
    Properties:
      DestinationCidrBlock: !Ref 'Branch1CIDR'
      InstanceId: !Ref 'vMX2Instance'
      RouteTableId: !Ref 'VPCPrivateSubnet2ARouteTableID'

Outputs:
  vMX1InstanceID:
    Value: !Ref 'vMX1Instance'
  vMX2InstanceID:
    Value: !Ref 'vMX2Instance'
  SecurityGroup:
    Value: !Ref 'SecurityGroup'
